@using MoneyApp.Dto;
@using System.Linq;
@model dynamic

@{
    ViewBag.Title = "Accounts Overview";
    UserDto user = @Model.user;
    var accountsPosition = (int)@Model.accountsIndex;
    var accounts = user.Accounts.Skip(accountsPosition);
}

<div class="loginBox">

    <div class="row">
        <div class="col-xs-offset-1 col-xs-10">
            <h6 class="pull-left">Your Money Accounts</h6><br />
            <h3 class="text-center">@user.Username</h3>
            <br />
        </div>
    </div>

    <div class="row" style="height: 500px !important; overflow: auto;">
        <div class="col-xs-offset-1 col-xs-10 ">
            <table class="table table-hover table-borderless">
                <tbody>
                @{int count = 0;}

                @foreach (var account in accounts.Take(10))
                {
                    <tr>
                        <td onclick="LoadAccountPage(this)">@account.AccountName</td>

                        @if (account.AccountBalance < 0)
                        {
                            <td onclick="LoadAccountPage(this)" class="tdRed">@Math.Abs(account.AccountBalance) dr</td>
                        }
                        @if (account.AccountBalance >= 0)
                        {
                            <td onclick="LoadAccountPage(this)" class="tdGreen">@Math.Abs(account.AccountBalance) cr</td>
                        }
                        <td onclick="LoadAccountPage(this)" class="col-xs-2">
                            <a id="go" asp-action="AccountPage" asp-route-accountGuid="@account.AccountGuid" @*asp-route-userGuid="@user.UserGuid"*@ asp-route-position="0"></a>
                        </td>
                        <td>
                            <a onclick="ConfirmDelete('Delete Money Account?')" class="glyphicon glyphicon-remove"
                               asp-action="DeleteMoneyAccountFromUser" asp-route-accountGuid="@account.AccountGuid" @*asp-route-userGuid="@user.UserGuid"*@></a>
                        </td>
                    </tr>
                }
                <tr><td><a asp-action="UserAccountsIndex" @*asp-route-userGuid="@user.UserGuid"*@>More</a></td></tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-offset-1 col-xs-10">
            <form asp-action="CreateMoneyAccountForUser" @*asp-route-userGuid="@user.UserGuid"*@>

                <br />
                <div class="col-xs-offset-6 col-xs-13">
                    <input class="input" type="text" placeholder="account name" name="accountName" />
                </div>

                <br />
                <div class="pull-right">
                    <button onclick="ValidAccountName(this)" class="btn btn-success">Create Account</button>
                </div>
            </form>
        </div>
    </div>
    <br />

    <div class="row">
        <div class="col-xs-offset-1 col-xs-10" style="text-align: right">
            <a onclick="ConfirmDelete('Delete Your Account?')" asp-action="DeleteUser" @*asp-route-userGuid="@user.UserGuid"*@>Delete User Account</a>
        </div>
    </div>
    <br />
</div>

<script>
    function LoadAccountPage(row) {
        row.parentElement.getElementsByTagName("a")[0].click();
    }

    function ConfirmDelete(message) {
        if (confirm(message)) {
            return;
        }
        event.preventDefault();
    }

    function ValidAccountName(self) {
        var input = self.parentElement.parentElement.getElementsByTagName("input")[0];
        var regex = /^[A-Z]{1}[A-Za-z]{6,20}$/;
        if (input.value.match(regex)) {
            return;
        }
        input.value = null;
        input.placeholder = "Invalid account name";
        event.preventDefault();
    }
</script>